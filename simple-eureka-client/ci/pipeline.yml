resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: v1.1.4
resources:
  - name: repo-prod
    type: git
    source:
      uri: git@github.com:making/c2c-demo.git
      branch: master
      private_key: {{github-private-key}}
  - name: repo-dev
    type: git
    source:
      uri: git@github.com:making/c2c-demo.git
      branch: develop
      private_key: {{github-private-key}}
  - name: repo-version
    type: semver
    source:
      uri: git@github.com:making/c2c-demo.git
      branch: version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.1.0
  - name: utils
    type: git
    source:
      uri: https://github.com/maki-home/concourse-utils
      branch: master
  - name: gpg
    type: git
    source:
      uri: https://github.com/maki-home/encrypted-gpg
      branch: master
  - name: m2
    type: docker-image
    source:
      repository: making/blog-m2
  - name: maven
    type: docker-image
    source:
      repository: maven
      tag: 3.3.9-jdk-8
  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack-webhook-url}}
jobs:
  - name: unit-test
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
        - get: utils
        - get: maven
        - get: m2
      - task: unit
        image: maven
        config:
          platform: linux
          inputs:
            - name: repo
            - name: utils
            - name: m2
          run:
            path: bash
            args:
            - -c
            - |
              REPO=repo/simple-eureka-client
              utils/scripts/add-repos-in-pom-xml.sh $REPO && \
              utils/scripts/mvn.sh test $REPO
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
  - name: deploy-to-central-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
          passed:
          - unit-test
        - get: utils
        - get: gpg
        - get: m2
        - get: maven
      - task: deploy
        image: maven
        config:
          platform: linux
          inputs:
            - name: repo
            - name: utils
            - name: gpg
            - name: m2
          outputs:
            - name: output
          run:
            path: bash
            args:
            - -c
            - |
              REPO=repo/simple-eureka-client
              mkdir -p ~/.gnupg && \
              utils/scripts/add-repos-in-pom-xml.sh $REPO && \
              utils/scripts/add-distribution-management-in-pom-xml-to-central.sh $REPO && \
              utils/scripts/generate-settings-xml-to-central.sh ${SONATYPE_USERNAME} ${SONATYPE_PASSWORD} $REPO && \
              gpg/deceypt-pgp.sh $REPO && \
              utils/scripts/mvn.sh "deploy -s settings.xml -DperformRelease=true -Dmaven.test.skip=true" $REPO
        params: &CENTRAL
          SONATYPE_USERNAME: {{sonatype-username}}
          SONATYPE_PASSWORD: {{sonatype-password}}
          ENCRYPTION_PASSWORD: {{gpg-encryption-password}}
          GPG_DIR: .
          GPG_KEYNAME: {{gpg-keyname}}
          GPG_PASSPHRASE: {{gpg-passphrase}}
        on_success:
          put: slack-alert
          params: &SLACK_SUCCESS
            channel: '#concourse'
            text: |
              <!here> :white_check_mark: *$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME* succeeded with build <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_NAME>!
        on_failure:
          put: slack-alert
          params: &SLACK_FAILURE
            channel: '#concourse'
            text: |
              <!here> :rotating_light: *$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME* failed with build <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_NAME>!
  - name: merge-develop-to-master
    plan:
      - aggregate:
        - get: repo-other
          resource: repo-prod
        - get: repo-dev
          passed:
          - deploy-to-central-dev
        - get: utils
      - task: merge-develop-to-master
        file: utils/tasks/merge-develop-to-other.yml
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
        params: &GIT
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-prod
        params:
          repository: other-out
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
  - name: tag-master
    plan:
      - aggregate:
        - get: repo-prod
          passed:
          - merge-develop-to-master
          trigger: true
        - get: repo-version
        - get: utils
        - get: m2
      - task: bump-to-release-version
        file: utils/tasks/bump-to-release-version.yml
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
        params:
          <<: *GIT
          PROJECT: simple-eureka-client
      - put: repo-prod
        params:
          repository: master-out
          tag: repo-version/number
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
  - name: deploy-to-central-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - tag-master
        - get: utils
        - get: gpg
        - get: m2
        - get: maven
      - task: deploy
        image: maven
        config:
          platform: linux
          inputs:
            - name: repo
            - name: utils
            - name: gpg
            - name: m2
          outputs:
            - name: output
          run:
            path: bash
            args:
            - -c
            - |
              REPO=repo/simple-eureka-client
              mkdir -p ~/.gnupg && \
              utils/scripts/add-repos-in-pom-xml.sh $REPO && \
              utils/scripts/add-distribution-management-in-pom-xml-to-central.sh $REPO && \
              utils/scripts/generate-settings-xml-to-central.sh ${SONATYPE_USERNAME} ${SONATYPE_PASSWORD} $REPO && \
              gpg/deceypt-pgp.sh $REPO && \
              utils/scripts/mvn.sh "deploy -s settings.xml -DperformRelease=true -Dmaven.test.skip=true" $REPO
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
        params:
          <<: *CENTRAL
  - name: bump-to-next-minor-version
    plan:
      - aggregate:
        - get: repo-staging
          resource: repo-dev
        - get: repo-prod
          passed:
          - deploy-to-central-prod
          trigger: true
        - get: repo-version
          params:
            bump: minor
        - get: utils
        - get: m2
      - task: bump-to-next-minor-version
        file: utils/tasks/bump-to-next-develop-version.yml
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
        params:
          <<: *GIT
          PROJECT: simple-eureka-client
      - put: repo-dev
        params:
          repository: release-out
        on_success:
          put: slack-alert
          params:
            <<: *SLACK_SUCCESS
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE
      - put: repo-version
        params:
          file: repo-version/number
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_FAILURE